diff -rupbN linux.orig/drivers/gpu/drm/drm_mode_object.c linux/drivers/gpu/drm/drm_mode_object.c
--- linux.orig/drivers/gpu/drm/drm_mode_object.c	2024-09-12 23:28:10.198040917 +0000
+++ linux/drivers/gpu/drm/drm_mode_object.c	2024-09-21 20:21:22.765668591 +0000
@@ -42,7 +42,7 @@ int __drm_mode_object_add(struct drm_dev
 {
 	int ret;
 
-	WARN_ON(!dev->driver->load && dev->registered && !obj_free_cb);
+	//WARN_ON(!dev->driver->load && dev->registered && !obj_free_cb);
 
 	mutex_lock(&dev->mode_config.idr_mutex);
 	ret = idr_alloc(&dev->mode_config.object_idr, register_obj ? obj : NULL,
@@ -239,8 +239,8 @@ void drm_object_attach_property(struct d
 	if (obj->type == DRM_MODE_OBJECT_CONNECTOR) {
 		struct drm_connector *connector = obj_to_connector(obj);
 
-		WARN_ON(!dev->driver->load &&
-			connector->registration_state == DRM_CONNECTOR_REGISTERED);
+	//	WARN_ON(!dev->driver->load &&
+	//		connector->registration_state == DRM_CONNECTOR_REGISTERED);
 	} else {
 		WARN_ON(!dev->driver->load && dev->registered);
 	}
diff -rupbN linux.orig/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c linux/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
--- linux.orig/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c	2024-09-12 23:28:10.306043312 +0000
+++ linux/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c	2024-09-21 15:09:27.141589950 +0000
@@ -5433,8 +5433,8 @@ static int vop2_plane_atomic_check(struc
 	/* Cluster can't support xmirror/rotate90/rotate270 when it isn't fbc format. */
 	if (vop2_cluster_window(win) && !vpstate->afbc_en &&
 	    (pstate->rotation & (DRM_MODE_REFLECT_X | DRM_MODE_ROTATE_90 | DRM_MODE_ROTATE_270))) {
-		DRM_ERROR("Unsupported linear rotation(%d) format at %s\n",
-			  pstate->rotation, win->name);
+		//DRM_ERROR("Unsupported linear rotation(%d) format at %s\n",
+		//	  pstate->rotation, win->name);
 		return -EINVAL;
 	}
 
